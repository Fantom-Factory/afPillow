Overview [#overview]
********************
'Pillow' - Something for your web app to get its teeth into!

'Pillow' is a library for integrating [efanXtra]`http://www.fantomfactory.org/pods/afEfanXtra` components with the
[BedSheet]`http://www.fantomfactory.org/pods/afBedSheet` web framework.
It automatically routes web requests to pages and returns the rendered response.



Install [#install]
******************
Install 'afPillow' with the [Fantom Respository Manager]`http://fantom.org/doc/docFanr/Tool.html#install`:

  C:\> fanr install -r http://repo.status302.com/fanr/ afPillow

To use in a [Fantom]`http://fantom.org/` project, add a dependency to its 'build.fan':

  depends = ["sys 1.0", ..., "afPillow 0+"]



Quick Start [#quickStart]
*************************
Example.efan:
pre>
Hello Mum! I'm <%= age %> years old!
<pre

Example.fan:
pre>
using afIoc
using afEfanXtra
using afPillow



// ---- The only class you need! ----

const mixin Example : Page {
  abstract Int age

  @InitRender
  Void initRender(Int age) {
    this.age = age
  }
}



// ---- Standard BedSheet Support Classes ----

class Main {
  Int main() {
    afBedSheet::Main().main([AppModule#.qname, "8069"])
  }
}

// SubModule only needed when running from a script
@SubModule { modules=[EfanXtraModule#, PillowModule#] }
class AppModule {

   // Contribution needed when running from a script
   @Contribute { serviceType=EfanTemplateDirectories# }
   static Void contributeEfanDirs(OrderedConfig config) {

      // Look for Example.efan in the same dir as this file
      config.add(`./`)
   }
}
<pre

Run the **Example.fan** script from the command line:
pre>
C:\> fan Example.fan

Efan Library: 'app' has 1 page(s):
  Example : /example
<pre

Then point your browser at `http://localhost:8069/example/42`:

  Hello Mum! I'm 42 years old!



Usage [#usage]
**************
To create a web page, define a 'const mixin' that extends [Page]`Page`. Example:

pre>
  using afPillow

  const mixin Admin : Page {
    ...
  }
<pre

[Pages]`Page` are [efanXtra]`http://www.fantomfactory.org/pods/afEfanXtra` components and behave in exactly the same way.

'Pillow' will automatically route uris with your page name, to your page.
Camel casing class names results in a '/' delimiter.
Examples:

  `/admin`        --> Admin.fan
  `/admin/secret` --> AdminSecret.fan

Or you can use the [@PageUri]`PageUri` facet to define an explicit URI.

As seen in the [Quick Start]`#quickStart` example, requests are automatically mapped to the '@InitRender' methods of your Pages,
with uri segments mapped to '@InitRender' parameters. If the '@InitRender' method returns a BedSheet response, page rendering
is aborted and the response object is processed instead. Example:

pre>
using afBedSheet
using afPillow

const mixin Example : Page {

  @InitRender
  Obj? initRender(Int age) {
    if (age > 69)
      return Redirect.movedTemporarily(`/too-old`)

    return null
  }
}
<pre



Welcome Pages [#welcomePages]
*****************************
'Pillow' supports the routing of welcome pages, also known as directory pages.

If 'Pillow' recieves a directory uri (a uri that ends in /slash/) then it renders a
[welcome page]`PillowConfigIds.welcomePage`, which defaults to 'Index'.
Examples:

  `/`        --> Index.fan
  `/admin/`  --> AdminIndex.fan

More can be read about directory urls in the article:
[Should Your URLs Point to the Directory or the Index Page?]`http://www.thesitewizard.com/sitepromotion/directory-name-or-index-url.shtml`



Content Type [#contentType]
***************************
Page template files should use a double extension in their name, for example,

  IndexPage.xhtml.slim

The outer extension denotes the type of templating to use, [Slim]`http://www.fantomfactory.org/pods/afSlim` in our example.
The innter extension is used to find the [Content-Type]`http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.17`
that is sent in the HTTP response header. In our example, the 'Content-Type' would be set to ' application/xhtml+xml'.

If a double extension is not used, or not know, then the default content type, as defined by the config value, is used.

Use the [@PageContentType]`PageContentType` facet to explicitly set the content type.



Release Notes [#releaseNotes]
*****************************
v0.0.10 [#v0.0.10]
----------------
 - Chg: Renamed 'PageRenderMeta' -> 'RenderingPageMeta'.

v0.0.8 [#v0.0.8]
----------------
 - New: Use the '@PageContentType' facet to explicitly define the content type for your page.
 - New: Use a double extension (e.g. 'indexPage.xhtml.slim') to set the content type for the page.
 - Bug: '@InitRender' params could incorrectly match for directory index pages.

v0.0.6 [#v0.0.6]
----------------
 - New: Page uris and BedSheet routes are generated from the '@InitRender' method signature.
 - New: Directory uris may now serve welcome pages.
 - Chg: Updated to use 'BedSheet 1.2'.
 - Chg: Renamed project to 'afPillow' (from 'afBedSheetEfanExtra').
 - Chg: Reanmed 'EfanPageMeta' to 'RenderPageMeta'.
 - Chg: Renamed 'PageRoute' to 'PageUri'.

v0.0.4 [#v0.0.4]
----------------
 - New: Added '@PageRoute' facet that lets you specify a bespoke uri
 - New: Added 'EfanPageMeta' which returns the active rendering page.

v0.0.2 [#v0.0.2]
----------------
 - New: Preview Release

